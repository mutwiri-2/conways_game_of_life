# The Game of Life, also known simply as Life, is a cellular automaton devised by
# the British mathematician John Horton Conway in 1970

# It is a zero-player game, meaning that its evolution is determined by its initial state,
# requiring no further input. One interacts with the Game of Life by creating an
# initial configuration and observing how it evolves. It is Turing complete and
# can simulate a universal constructor or any other Turing machine.

# The universe of the Game of Life is an infinite, two-dimensional orthogonal
# grid of square cells, each of which is in one of two possible states, alive or
# dead, (or populated and unpopulated, respectively). Every cell interacts with
# its eight neighbours, which are the cells that are horizontally, vertically, or
# diagonally adjacent. At each step in time, the following transitions occur:

#     1. Any live cell with two or three live neighbors survives.
#     2. Any dead cell with three live neighbors becomes a live cell.
#     3. All other live cells die in the next generation. Similarly, all other dead cells stay dead.

# The initial pattern constitutes the seed of the system. The first generation is
# created by applying the above rules simultaneously to every cell in the seed;
# births and deaths occur simultaneously, and the discrete moment at which this
# happens is sometimes called a tick. Each generation is a pure function of the
# preceding one. The rules continue to be applied repeatedly to create further generations.

# for more read >>> https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life

Implementation:

1. declare a container to store the cells - a list of lists - inner list is a row 
of either alive or dead cells
2. for every iteration of the game, print the current cell automata,then calculate
the next cell automata based on the current cell automata 
3. for the above, you need two copies of lists at a time
4. print current cells one row at a time (using end='') separated by a new line
5. for each cell, find the cordinates of the neighboring cells - top-left, top, top-right
left, right, bottom-left, bottom, bottom-right
6. using the above neighbors, calculate the num of alive neighboring cells for each
 cell in the current cells
7. finally, implement the game rules, for each alive cell with two or three alive neighbors
it lives on and for every dead cell with three alive neighbors it lives on as well and all 
other cells die or remain dead.